/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package VistasInternas;

//SELECT dp.importe, p.id_mesero, p.id_mesa FROM detalle_pedido dp JOIN pedido p ON dp.id_pedido = p.id_pedido WHERE dp.id_pedido = 32;

import AccesoADatos.DetallePedidoData;
import AccesoADatos.PedidoData;
import Entidades.DetallePedido;
import Entidades.Mesero;
import Entidades.Pedido;
import LoginMozo.LoginMozo;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matiSqui
 */
public class ListadoInternalPedidos extends javax.swing.JInternalFrame {
    
 private DefaultTableModel modelo = new DefaultTableModel();
 
 
    DetallePedidoData deData = new DetallePedidoData();
    PedidoData peData = new PedidoData();
    
    /**
     * Creates new form ListadoInternalPedidos
     */
    public ListadoInternalPedidos() {
        initComponents();
        
        armarCabecera();
        usuarioLog();
        setHoraActual();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txIdMozo = new javax.swing.JTextField();
        btVer = new javax.swing.JButton();
        btSalir = new javax.swing.JButton();
        dateC = new com.toedter.calendar.JDateChooser();
        labelMozo = new javax.swing.JLabel();
        txTotalF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txGastopp = new javax.swing.JTextField();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/listadoPedidos.PNG"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Acá podrás ver los pedidos cobrados del día.");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Id mozo:");

        txIdMozo.setEnabled(false);

        btVer.setText("Ver");
        btVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerActionPerformed(evt);
            }
        });

        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        labelMozo.setText("Facturado: ");

        jLabel4.setText("Costo por persona: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txIdMozo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(dateC, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btVer)
                .addGap(68, 68, 68))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSalir)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(labelMozo))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txTotalF, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txGastopp, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txIdMozo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btVer))
                    .addComponent(dateC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMozo)
                    .addComponent(txTotalF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txGastopp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btSalir)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
dispose();     

//hacer yun recordatorio, una clase y una tabla que antes del cerrar el programa dejas anotado
//luego cuando abris te salta un mensaje con ese recordatorio 
//tambien poder hacer un calculo del dia anterior, por ejemplo cual fue el promedio 
//de ingresos segun la cantidad de mesas
// TODO add your handling code here:
    }//GEN-LAST:event_btSalirActionPerformed

    private void btVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerActionPerformed

        
        Integer idMozo = Integer.parseInt(txIdMozo.getText()); 
       
        cargarTabla();
        
        
        
        
        
    }//GEN-LAST:event_btVerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalir;
    private javax.swing.JButton btVer;
    private com.toedter.calendar.JDateChooser dateC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelMozo;
    private javax.swing.JTextField txGastopp;
    private javax.swing.JTextField txIdMozo;
    private javax.swing.JTextField txTotalF;
    // End of variables declaration//GEN-END:variables
    
//setIdUsuario
public void usuarioLog(){
    
    Mesero mozo = LoginMozo.getMeseroActual();
    
   txIdMozo.setText(String.valueOf(mozo.getIdMesero()));

}
    
    
    //Sethora
public void setHoraActual(){
        
   LocalDate fechaActual = LocalDate.now();
   Date date = Date.from(fechaActual.atStartOfDay(ZoneId.systemDefault()).toInstant());
    
    dateC.setDate(date);
    
}

//cabecera
public void armarCabecera(){
    
    modelo.addColumn("idPedido");
    modelo.addColumn("n° Mesa");
    modelo.addColumn("Total por mesa");
    
    jTable1.setModel(modelo);
    
}


//cargar tabla
   public void cargarTabla(){
       
       double totalGenerado = 0;
       double costopp = 0;
        int totalCapacidadMesas = 0;
        Mesero mozo = LoginMozo.getMeseroActual();
        
       Date date = dateC.getDate();
        
       LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        modelo.setRowCount(0);
        
        for (Pedido pedido : peData.listarPedidoMozoPorFecha(mozo.getIdMesero(), localDate)) {
            
            Object [] fila = new Object[3];
            fila [0] = pedido.getIdPedido();
            fila [1] = pedido.getMesa().getNumeroMesa();
            fila [2] = deData.sumarImportesPorPedido(pedido.getIdPedido());
            
          
            
            modelo.addRow(fila);
            //sumo los totales de cada pedido
            double totalPedido = deData.sumarImportesPorPedido(pedido.getIdPedido());
            totalGenerado += totalPedido;
            
            //calculo un costo por persona, teniendo en cuenta el total
            //con los lugares de las mesas 
            //y obtengo un valor de lo que gasta una persona
            
             totalCapacidadMesas += pedido.getMesa().getCapacidad();
           
               if (totalCapacidadMesas > 0) {
                costopp = totalGenerado / totalCapacidadMesas;
            }
             
   
            
        }
        //set tecxtField de total
        txTotalF.setText(String.valueOf("$"+totalGenerado));
        //set textField calculopp
        txGastopp.setText(String.valueOf("$"+costopp));
        
    }

   
   
}
